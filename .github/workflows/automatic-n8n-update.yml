name: Scheduled n8n Nodes Generation

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

env:
  BRANCH_NAME: automated/update-n8n-nodes

jobs:
  generate-nodes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Update submodules
        run: |
          git submodule update --remote --merge
          submodule_version=$(git submodule status | grep 'vendor/n8n' | awk '{print $1}')
          echo "SUBMODULE_VERSION=$submodule_version" >> $GITHUB_ENV

      - name: Check if submodules have updates
        id: check-updates
        run: |
          if git diff --quiet HEAD; then
            echo "has_updates=false" >> $GITHUB_OUTPUT
          else
            echo "has_updates=true" >> $GITHUB_OUTPUT
          fi

      - name: Check for existing PR
        if: steps.check-updates.outputs.has_updates == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          existing_pr=$(gh pr list --head "automated/update-n8n-nodes" --json number --jq '.[0].number' || echo "")
          echo "EXISTING_PR=$existing_pr" >> $GITHUB_ENV

      - name: Switch to existing branch or create new one
        if: steps.check-updates.outputs.has_updates == 'true'
        run: |
          if [ ! -z "$EXISTING_PR" ]; then
            echo "Reusing existing branch and PR #$EXISTING_PR"
            git fetch origin automated/update-n8n-nodes
            git checkout $BRANCH_NAME
            git pull 
          else
            echo "Creating new branch"
            git checkout -b $BRANCH_NAME
          fi

      - name: Setup Bun
        if: steps.check-updates.outputs.has_updates == 'true'
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        if: steps.check-updates.outputs.has_updates == 'true'
        run: bun install --frozen-lockfile

      - name: Run generate command
        if: steps.check-updates.outputs.has_updates == 'true'
        working-directory: packages/n8n-kit
        run: |
          bun run generate

      - name: Add changeset
        if: steps.check-updates.outputs.has_updates == 'true'
        run: |
          # remove previous changesets
          rm .changeset/automated-n8n-nodes-update-*.md || true

          # Create changeset file
          changeset_file=".changeset/automated-n8n-nodes-update-$(date +%Y%m%d-%H%M%S).md"

          cat > $changeset_file << EOF
          ---
          "@vahor/n8n-kit": minor
          ---

          Automated update of n8n nodes from upstream submodule (version [$SUBMODULE_VERSION](https://github.com/n8n-io/n8n/tree/$SUBMODULE_VERSION))
          EOF

          echo "Created changeset: $changeset_file"

      - name: Commit changes
        if: steps.check-updates.outputs.has_updates == 'true'
        run: |
          git add .
          git commit -m "chore: automated n8n nodes update

          - Updated submodules to latest version
          - Regenerated n8n nodes
          - Added changeset for release" --allow-empty

      - name: Push changes and create PR
        if: steps.check-updates.outputs.has_updates == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          BODY: |
            ## Automated n8n Nodes Update

            This PR was automatically generated to update n8n nodes.

            Updated to n8n version [$SUBMODULE_VERSION](https://github.com/n8n-io/n8n/tree/$SUBMODULE_VERSION)

            ---
            *Generated in $JOB_URL*
        run: |
          git push --set-upstream origin $BRANCH_NAME
          $pr_title="chore: automated n8n nodes update $(date +%Y-%m-%d)"

          if [ ! -z "$EXISTING_PR" ]; then
            echo "Updating existing PR #$EXISTING_PR"
            gh pr edit $EXISTING_PR --title "$pr_title" --body "$BODY"
          else
            echo "Creating new PR"
            gh pr create \
              --title "$pr_title" \
              --body "$BODY" \
              --head $BRANCH_NAME \
              --base main
          fi

      - name: No updates needed
        if: steps.check-updates.outputs.has_updates == 'false'
        run: |
          echo "No submodule updates found. Skipping PR creation."
